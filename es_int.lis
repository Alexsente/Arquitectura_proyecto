00000000                                     1  * Inicializa el SP y el PC
00000000                                     2          ORG     $0
00000000  00008000                           3          DC.L    $8000           *Pila
00000004  00002898                           4          DC.L    INICIO          *PC
00000400                                     5          ORG     $400
00000400                                     6  
00000400                                     7  	*Buffers
00000400                                     8  BUS_RBA:DS.B 2002
00000BD2                                     9  BUS_RBB:DS.B 2002
000013A4                                    10  BUS_TBA:DS.B 2002
00001B76                                    11  BUS_TBB:DS.B 2002
00002348                                    12  
00002348                                    13  	*Punteros
00002348  00000000                          14  RBA_IN_PUNT: DC.L 0
0000234C  00000000                          15  RBA_FIN_PUNT:DC.L 0
00002350  00000000                          16  RBA_EXT_PUNT:DC.L 0
00002354  00000000                          17  RBA_INT_PUNT:DC.L 0
00002358  00000000                          18  RBB_IN_PUNT: DC.L 0
0000235C  00000000                          19  RBB_FIN_PUNT:DC.L 0
00002360  00000000                          20  RBB_EXT_PUNT:DC.L 0
00002364  00000000                          21  RBB_INT_PUNT:DC.L 0
00002368  00000000                          22  TBA_IN_PUNT: DC.L 0
0000236C  00000000                          23  TBA_FIN_PUNT:DC.L 0
00002370  00000000                          24  TBA_EXT_PUNT:DC.L 0
00002374  00000000                          25  TBA_INT_PUNT:DC.L 0
00002378  00000000                          26  TBB_IN_PUNT: DC.L 0
0000237C  00000000                          27  TBB_FIN_PUNT:DC.L 0
00002380  00000000                          28  TBB_EXT_PUNT:DC.L 0
00002384  00000000                          29  TBB_INT_PUNT:DC.L 0
00002388                                    30  
00002388                                    31  *Flag
00002388  00000000                          32  FLAG_PRINT: DC.L 0
0000238C                                    33  
0000238C                                    34  * Definicion de equivalencias
0000238C                                    35  
0000238C  =00EFFC01                         36  MR1A    EQU     $effc01       * de modo A (escritura)
0000238C  =00EFFC01                         37  MR2A    EQU     $effc01       * de modo A (2 escritura)
0000238C  =00EFFC03                         38  SRA     EQU     $effc03       * de estado A (lectura)
0000238C  =00EFFC03                         39  CSRA    EQU     $effc03       * de seleccion de reloj A (escritura)
0000238C  =00EFFC05                         40  CRA     EQU     $effc05       * de control A (escritura)
0000238C  =00EFFC07                         41  RBA     EQU     $effc07       * buffer recepcion A  (lectura)
0000238C  =00EFFC07                         42  TBA     EQU     $effc07       * buffer transmision A (escritura)
0000238C  =00EFFC09                         43  ACR     EQU     $effc09       * de control auxiliar
0000238C  =00EFFC0B                         44  IMR     EQU     $effc0B       * de mascara de interrupcion A (escritura)
0000238C  =00EFFC0B                         45  ISR     EQU     $effc0B       * de estado de interrupcion A (lectura)
0000238C                                    46  
0000238C  =00EFFC11                         47  MR1B    EQU     $effc11       * de modo B (escritura)
0000238C  =00EFFC11                         48  MR2B    EQU     $effc11       * de modo B (2 escritura)
0000238C  =00EFFC13                         49  SRB     EQU     $effc13       * de estado B (lectura)
0000238C  =00EFFC13                         50  CSRB    EQU     $effc13       * de seleccion de reloj B (escritura)
0000238C  =00EFFC15                         51  CRB     EQU     $effc15       * de control B (escritura)
0000238C  =00EFFC17                         52  RBB     EQU     $effc17       * buffer recepcion B  (lectura)
0000238C  =00EFFC17                         53  TBB     EQU     $effc17       * buffer transmision B (escritura)
0000238C  =00EFFC09                         54  IVR     EQU     $effc09       * de vector de interrupcion
0000238C                                    55  
0000238C                                    56    *********************INIT**********************
0000238C                                    57  
0000238C                                    58  INIT:
0000238C                                    59  
0000238C                                    60  *********************BUFFERS**********************
0000238C                                    61  
0000238C  21FC 00000400 2348                62  	MOVE.L #BUS_RBA,RBA_IN_PUNT
00002394  21FC 00000400 2350                63  	MOVE.L #BUS_RBA,RBA_EXT_PUNT
0000239C  21FC 00000400 2354                64  	MOVE.L #BUS_RBA,RBA_INT_PUNT
000023A4  21FC 00000400 234C                65  	MOVE.L #BUS_RBA,RBA_FIN_PUNT
000023AC  06B8 000007CF 234C                66  	ADD.L  #1999,RBA_FIN_PUNT
000023B4  21FC 00000BD2 2358                67  	MOVE.L #BUS_RBB,RBB_IN_PUNT
000023BC  21FC 00000BD2 2360                68  	MOVE.L #BUS_RBB,RBB_EXT_PUNT
000023C4  21FC 00000BD2 2364                69  	MOVE.L #BUS_RBB,RBB_INT_PUNT
000023CC  21FC 00000BD2 235C                70  	MOVE.L #BUS_RBB,RBB_FIN_PUNT
000023D4  06B8 000007CF 235C                71  	ADD.L  #1999,RBB_FIN_PUNT
000023DC  21FC 000013A4 2368                72  	MOVE.L #BUS_TBA,TBA_IN_PUNT
000023E4  21FC 000013A4 2370                73  	MOVE.L #BUS_TBA,TBA_EXT_PUNT
000023EC  21FC 000013A4 2374                74  	MOVE.L #BUS_TBA,TBA_INT_PUNT
000023F4  21FC 000013A4 236C                75  	MOVE.L #BUS_TBA,TBA_FIN_PUNT
000023FC  06B8 000007CF 236C                76  	ADD.L  #1999,TBA_FIN_PUNT
00002404  21FC 00001B76 2378                77  	MOVE.L #BUS_TBB,TBB_IN_PUNT
0000240C  21FC 00001B76 2380                78  	MOVE.L #BUS_TBB,TBB_EXT_PUNT
00002414  21FC 00001B76 2384                79  	MOVE.L #BUS_TBB,TBB_INT_PUNT
0000241C  21FC 00001B76 237C                80  	MOVE.L #BUS_TBB,TBB_FIN_PUNT
00002424  06B8 000007CF 237C                81  	ADD.L  #1999,TBB_FIN_PUNT
0000242C                                    82  
0000242C                                    83    *********************DECLARACIONES INIT**********************
0000242C                                    84  
0000242C  13FC 0010 00EFFC05                85    MOVE.B #%00010000,CRA      * Reinicia el puntero MR1A
00002434  13FC 0010 00EFFC15                86    MOVE.B #%00010000,CRB      * Reinicia el puntero MR1B
0000243C  13FC 0003 00EFFC11                87    MOVE.B #%00000011,MR1B     * 8 bits por caracter de modo B.
00002444  13FC 0003 00EFFC01                88    MOVE.B #%00000011,MR1A     * 8 bits por caracter de modo A.
0000244C  13FC 0000 00EFFC01                89    MOVE.B #%00000000,MR2A     * Eco desactivado de modo A.
00002454  13FC 0000 00EFFC11                90    MOVE.B #%00000000,MR2B     * Eco desactivado de modo B.
0000245C  13FC 00CC 00EFFC03                91    MOVE.B #%11001100,CSRA     * Velocidad = 38400 bps.
00002464  13FC 00CC 00EFFC13                92    MOVE.B #%11001100,CSRB     * Velocidad = 38400 bps
0000246C  13FC 0000 00EFFC09                93    MOVE.B #%00000000,ACR
00002474  13FC 0005 00EFFC05                94    MOVE.B #%00000101,CRA      * Transmision y recepcion activados A.
0000247C  13FC 0005 00EFFC15                95    MOVE.B #%00000101,CRB      * Transmision y recepcion activados B.
00002484  13FC 0040 00EFFC09                96    MOVE.B #$040,IVR           * Vector de Interrrupcion nº 40
0000248C  13FC 0022 00EFFC0B                97    MOVE.B #%00100010,IMR      * Habilita las interrupciones de A y B
00002494  21FC 00002892 0100                98    MOVE.L #RTI,$100           * Inicio de RTI en tabla de interrupciones
0000249C  4E75                              99    RTS *Retorno
0000249E                                   100    *********************LEECAR**********************
0000249E                                   101  
0000249E                                   102    LEECAR:
0000249E  4E56 0000                        103      LINK A6,#0 *Creación del marco de pila
000024A2  0800 0000                        104      BTST    #0,D0
000024A6  6700 007E                        105      BEQ LA_LINEA
000024AA                                   106  
000024AA                                   107  LB_LINEA:
000024AA  B07C 0001                        108       CMP #$00000001,D0
000024AE  6700 003C                        109       BEQ LB_REC
000024B2                                   110  LB_TRANS:
000024B2  2478 2378                        111       MOVE.L TBB_IN_PUNT,A2
000024B6  2678 2380                        112       MOVE.L TBB_EXT_PUNT,A3
000024BA  2878 2384                        113       MOVE.L TBB_INT_PUNT,A4
000024BE  2A78 237C                        114       MOVE.L TBB_FIN_PUNT,A5
000024C2  B8CB                             115       CMP  A3,A4    * E=I?
000024C4  6700 00DC                        116       BEQ VACIO     * E= I, entonces buffer vacio
000024C8  528D                             117       ADD.L #1,A5
000024CA  BACB                             118       CMP A3,A5     * E = F+1?
000024CC  538D                             119       SUB.L #1,A5  *Se restablece F a sus posicion original
000024CE  6700 000C                        120       BEQ TBB_RESET
000024D2  101B                             121       MOVE.B  (A3)+,D0
000024D4  21CB 2380                        122       MOVE.L  A3,TBB_EXT_PUNT
000024D8  6000 00CA                        123       BRA FIN_LEECAR
000024DC                                   124    TBB_RESET:
000024DC  528C                             125       ADD.L #1,A4
000024DE  101A                             126       MOVE.B (A2)+,D0
000024E0  21CC 2384                        127       MOVE.L A4,TBB_INT_PUNT
000024E4  21CA 2380                        128       MOVE.L A2,TBB_EXT_PUNT
000024E8  6000 00BA                        129       BRA FIN_LEECAR
000024EC                                   130  
000024EC                                   131  LB_REC:
000024EC  2478 2358                        132      MOVE.L RBB_IN_PUNT,A2
000024F0  2678 2360                        133      MOVE.L RBB_EXT_PUNT,A3
000024F4  2878 2364                        134      MOVE.L RBB_INT_PUNT,A4
000024F8  2A78 235C                        135      MOVE.L RBB_FIN_PUNT,A5
000024FC  B8CB                             136      CMP  A3,A4    * E=I?
000024FE  6700 00A2                        137      BEQ VACIO     * E= I, entonces buffer vacio
00002502  528D                             138      ADD.L #1,A5
00002504  BACB                             139      CMP A3,A5     * E = F+1?
00002506  538D                             140      SUB.L #1,A5  *Se restablece F a sus posicion original
00002508  6700 000C                        141      BEQ RBB_RESET
0000250C  101B                             142      MOVE.B  (A3)+,D0
0000250E  21CB 2360                        143      MOVE.L  A3,RBB_EXT_PUNT
00002512  6000 0090                        144      BRA FIN_LEECAR
00002516                                   145  RBB_RESET:
00002516  528C                             146      ADD.L #1,A4
00002518  101A                             147      MOVE.B (A2)+,D0
0000251A  21CC 2364                        148      MOVE.L A4,RBB_INT_PUNT
0000251E  21CA 2360                        149      MOVE.L A2,RBB_EXT_PUNT
00002522  6000 0080                        150      BRA FIN_LEECAR
00002526                                   151  LA_LINEA:
00002526  B07C 0000                        152      CMP #$00000000,D0
0000252A  6700 003C                        153      BEQ LA_REC
0000252E                                   154  
0000252E                                   155  LA_TRANS:
0000252E  2478 2368                        156      MOVE.L TBA_IN_PUNT,A2
00002532  2678 2370                        157      MOVE.L TBA_EXT_PUNT,A3
00002536  2878 2374                        158      MOVE.L TBA_INT_PUNT,A4
0000253A  2A78 236C                        159      MOVE.L TBA_FIN_PUNT,A5
0000253E  B8CB                             160      CMP  A3,A4    * E=I?
00002540  6700 0060                        161      BEQ VACIO     * E= I, entonces buffer vacio
00002544  528D                             162      ADD.L #1,A5
00002546  BACB                             163      CMP A3,A5     * E = F+1?
00002548  538D                             164      SUB.L #1,A5  *Se restablece F a sus posicion original
0000254A  6700 000C                        165      BEQ TBA_RESET
0000254E  101B                             166      MOVE.B  (A3)+,D0
00002550  21CB 2370                        167      MOVE.L  A3,TBA_EXT_PUNT
00002554  6000 004E                        168      BRA FIN_LEECAR
00002558                                   169  TBA_RESET:
00002558  528C                             170      ADD.L #1,A4
0000255A  101A                             171      MOVE.B (A2)+,D0
0000255C  21CC 2374                        172      MOVE.L A4,TBA_INT_PUNT
00002560  21CA 2370                        173      MOVE.L A2,TBA_EXT_PUNT
00002564  6000 003E                        174      BRA FIN_LEECAR
00002568                                   175  LA_REC:
00002568  2478 2348                        176      MOVE.L RBA_IN_PUNT,A2
0000256C  2678 2350                        177      MOVE.L RBA_EXT_PUNT,A3
00002570  2878 2354                        178      MOVE.L RBA_INT_PUNT,A4
00002574  2A78 234C                        179      MOVE.L RBA_FIN_PUNT,A5
00002578  B8CB                             180      CMP  A3,A4    * E=I?
0000257A  6700 0026                        181      BEQ VACIO     * E= I, entonces buffer vacio
0000257E  528D                             182      ADD.L #1,A5
00002580  BACB                             183      CMP A3,A5     * E = F+1?
00002582  538D                             184      SUB.L #1,A5  *Se restablece F a sus posicion original
00002584  6700 000C                        185      BEQ RBA_RESET
00002588  101B                             186      MOVE.B  (A3)+,D0
0000258A  21CB 2350                        187      MOVE.L  A3,RBA_EXT_PUNT
0000258E  6000 0014                        188      BRA FIN_LEECAR
00002592                                   189  
00002592                                   190  RBA_RESET:
00002592  528C                             191      ADD.L #1,A4
00002594  101A                             192      MOVE.B (A2)+,D0
00002596  21CC 2354                        193      MOVE.L A4,RBA_INT_PUNT
0000259A  21CA 2350                        194      MOVE.L A2,RBA_EXT_PUNT
0000259E  6000 0004                        195      BRA FIN_LEECAR
000025A2                                   196  
000025A2                                   197    VACIO:
000025A2  70FF                             198      MOVE.L #$ffffffff,D0
000025A4                                   199    FIN_LEECAR:
000025A4  4E5E                             200      UNLK A6 *Destrucción del marco de pila
000025A6  4E75                             201      RTS
000025A8                                   202  
000025A8                                   203  ********************ESCCAR********************
000025A8                                   204  ESCCAR:
000025A8  4E56 0000                        205      LINK A6,#0 *Creación del marco de pila
000025AC  0800 0000                        206      BTST #0,D0
000025B0  6700 00B2                        207      BEQ EA_LINEA
000025B4                                   208  EB_LINEA:
000025B4                                   209  
000025B4  B07C 0001                        210      CMP #$00000001,D0
000025B8  6700 0056                        211      BEQ ESC_REC_B
000025BC                                   212  ESC_TRANS_B:
000025BC  2478 2378                        213      MOVE.L TBB_IN_PUNT,A2 *Se mete el puntero de Principio al A2
000025C0  2678 2380                        214      MOVE.L TBB_EXT_PUNT,A3 *Se mete el puntero de E al A3
000025C4  2878 2384                        215      MOVE.L TBB_INT_PUNT,A4 *Se mete el puntero I en A4
000025C8  2A78 237C                        216      MOVE.L TBB_FIN_PUNT,A5 *Se mete el puntero FIn en A5
000025CC  538B                             217      SUB.L #1,A3  *Se le resta 1 a E
000025CE  B9CB                             218      CMP.L A3,A4 * I=E-1?
000025D0  528B                             219      ADD.L #1,A3  *Se restablece el valor de E
000025D2  6700 0140                        220      BEQ LLENO
000025D6  528D                             221      ADD.L #1,A5   *Se le añade 1 al puntero de fin
000025D8  BBCC                             222      CMP.L A4,A5   *Se comparan los punteros I y F+1
000025DA  538D                             223      SUB.L #1,A5   *Se restablece el valor del puntero FIn
000025DC  6700 001E                        224      BEQ  TBB_AUX      *Está en la posicion auxiliar
000025E0                                   225  
000025E0                                   226  TBB_NO_AUX:
000025E0  B9CB                             227      CMP.L A3,A4  *Se comparan I y E
000025E2  6C00 000E                        228      BGE TBB_MAYOR
000025E6  528C                             229      ADD.L #1,A4
000025E8  1881                             230      MOVE.B  D1,(A4)            *Push del registro D1 en el buffer
000025EA  21CC 2384                        231      MOVE.L  A4,TBB_INT_PUNT    *Guarda la nueva direcion del puntero
000025EE  6000 012A                        232      BRA FIN_ESCCAR
000025F2                                   233  
000025F2                                   234  TBB_MAYOR:
000025F2  18C1                             235      MOVE.B  D1,(A4)+           *Push del registro D1 en el buffer
000025F4  21CC 2384                        236      MOVE.L  A4,TBB_INT_PUNT           *Guarda la nueva direcion del puntero
000025F8  6000 0120                        237      BRA FIN_ESCCAR
000025FC                                   238  
000025FC                                   239  TBB_AUX:
000025FC  B5CB                             240      CMP.L A3,A2  * E=P?
000025FE  6700 0114                        241      BEQ   LLENO
00002602  2878 2378                        242      MOVE.L  TBB_IN_PUNT,A4
00002606  1881                             243      MOVE.B  D1,(A4)   *Push del registro D1 en el buffer
00002608  21CC 2384                        244      MOVE.L  A4,TBB_INT_PUNT  *Se Inicializa I con el valor de Principio
0000260C  6000 010C                        245      BRA FIN_ESCCAR
00002610                                   246  
00002610                                   247  ESC_REC_B:
00002610  2878 2364                        248    MOVE.L RBB_INT_PUNT,A4 *Se mete el puntero I en A4
00002614  2A78 235C                        249    MOVE.L RBB_FIN_PUNT,A5 *Se mete el puntero FIn en A5
00002618  2678 2360                        250    MOVE.L RBB_EXT_PUNT,A3 *Se mete el puntero de E al A3
0000261C  2478 2358                        251    MOVE.L RBB_IN_PUNT,A2 *Se mete el puntero de Principio al A2
00002620  538B                             252    SUB.L #1,A3  *Se le resta 1 a E
00002622  B9CB                             253    CMP.L A3,A4 * I=E-1?
00002624  528B                             254    ADD.L #1,A3  *Se restablece el valor de E
00002626  6700 00EC                        255    BEQ LLENO
0000262A  528D                             256    ADD.L #1,A5   *Se le añade 1 al puntero de fin
0000262C  BBCC                             257    CMP.L A4,A5   *Se comparan los punteros I y F+1
0000262E  538D                             258    SUB.L #1,A5   *Se restablece el valor del puntero FIn
00002630  6700 001E                        259    BEQ  RBB_AUX      *Está en la posicion auxiliar
00002634                                   260  
00002634                                   261  RBB_NO_AUX:
00002634  B9CB                             262    CMP.L A3,A4  *Se comparan I y E
00002636  6C00 000E                        263    BGE RBB_MAYOR
0000263A  528C                             264    ADD.L #1,A4
0000263C  1881                             265    MOVE.B  D1,(A4)            *Push del registro D1 en el buffer
0000263E  21CC 2364                        266    MOVE.L  A4,RBB_INT_PUNT    *Guarda la nueva direcion del puntero
00002642  6000 00D6                        267    BRA FIN_ESCCAR
00002646                                   268  
00002646                                   269  RBB_MAYOR:
00002646  18C1                             270    MOVE.B  D1,(A4)+           *Push del registro D1 en el buffer
00002648  21CC 2364                        271    MOVE.L  A4,RBB_INT_PUNT           *Guarda la nueva direcion del puntero
0000264C  6000 00CC                        272    BRA FIN_ESCCAR
00002650                                   273  
00002650                                   274  RBB_AUX:
00002650  B5CB                             275    CMP.L A3,A2  * E=P?
00002652  6700 00C0                        276    BEQ   LLENO
00002656  2878 2358                        277    MOVE.L  RBB_IN_PUNT,A4
0000265A  1881                             278    MOVE.B  D1,(A4)   *Push del registro D1 en el buffer
0000265C  21CC 2364                        279    MOVE.L  A4,RBB_INT_PUNT  *Se Inicializa I con el valor de Principio
00002660  6000 00B8                        280    BRA FIN_ESCCAR
00002664                                   281  
00002664                                   282  EA_LINEA:
00002664  B07C 0000                        283    CMP #$00000000,D0
00002668  6700 0056                        284    BEQ EA_REC
0000266C                                   285  
0000266C                                   286  EA_TRANS:
0000266C  2878 2374                        287    MOVE.L TBA_INT_PUNT,A4 *Se mete el puntero I en A4
00002670  2A78 236C                        288    MOVE.L TBA_FIN_PUNT,A5 *Se mete el puntero FIn en A5
00002674  2678 2370                        289    MOVE.L TBA_EXT_PUNT,A3 *Se mete el puntero de E al A3
00002678  2478 2368                        290    MOVE.L TBA_IN_PUNT,A2 *Se mete el puntero de Principio al A2
0000267C  538B                             291    SUB.L #1,A3  *Se le resta 1 a E
0000267E  B9CB                             292    CMP.L A3,A4 * I=E-1?
00002680  528B                             293    ADD.L #1,A3  *Se restablece el valor de E
00002682  6700 0090                        294    BEQ LLENO
00002686  528D                             295    ADD.L #1,A5   *Se le añade 1 al puntero de fin
00002688  BBCC                             296    CMP.L A4,A5   *Se comparan los punteros I y F+1
0000268A  538D                             297    SUB.L #1,A5   *Se restablece el valor del puntero FIn
0000268C  6700 001E                        298    BEQ  TBA_AUX      *Está en la posicion auxiliar
00002690                                   299  
00002690                                   300  TBA_NO_AUX:
00002690  B9CB                             301    CMP.L A3,A4  *Se comparan I y E
00002692  6C00 000E                        302    BGE TBA_MAYOR
00002696  528C                             303    ADD.L #1,A4
00002698  1881                             304    MOVE.B  D1,(A4)            *Push del registro D1 en el buffer
0000269A  21CC 2374                        305    MOVE.L  A4,TBA_INT_PUNT    *Guarda la nueva direcion del puntero
0000269E  6000 007A                        306    BRA FIN_ESCCAR
000026A2                                   307  
000026A2                                   308  TBA_MAYOR:
000026A2  18C1                             309    MOVE.B  D1,(A4)+           *Push del registro D1 en el buffer
000026A4  21CC 2374                        310    MOVE.L  A4,TBA_INT_PUNT           *Guarda la nueva direcion del puntero
000026A8  6000 0070                        311    BRA FIN_ESCCAR
000026AC                                   312  
000026AC                                   313  TBA_AUX:
000026AC  B5CB                             314    CMP.L A3,A2  * E=P?
000026AE  6700 0064                        315    BEQ   LLENO
000026B2  2878 2368                        316    MOVE.L  TBA_IN_PUNT,A4
000026B6  1881                             317    MOVE.B  D1,(A4)   *Push del registro D1 en el buffer
000026B8  21CC 2374                        318    MOVE.L  A4,TBA_INT_PUNT  *Se Inicializa I con el valor de Principio
000026BC  6000 005C                        319    BRA FIN_ESCCAR
000026C0                                   320  
000026C0                                   321  EA_REC:
000026C0  2878 2354                        322    MOVE.L RBA_INT_PUNT,A4 *Se mete el puntero I en A4
000026C4  2A78 234C                        323    MOVE.L RBA_FIN_PUNT,A5 *Se mete el puntero FIn en A5
000026C8  2678 2350                        324    MOVE.L RBA_EXT_PUNT,A3 *Se mete el puntero de E al A3
000026CC  2478 2348                        325    MOVE.L RBA_IN_PUNT,A2 *Se mete el puntero de Principio al A2
000026D0  538B                             326    SUB.L #1,A3  *Se le resta 1 a E
000026D2  B9CB                             327    CMP.L A3,A4 * I=E-1?
000026D4  528B                             328    ADD.L #1,A3  *Se restablece el valor de E
000026D6  6700 003C                        329    BEQ LLENO
000026DA  528D                             330    ADD.L #1,A5   *Se le añade 1 al puntero de fin
000026DC  BBCC                             331    CMP.L A4,A5   *Se comparan los punteros I y F+1
000026DE  538D                             332    SUB.L #1,A5   *Se restablece el valor del puntero FIn
000026E0  6700 001E                        333    BEQ  RBA_AUX      *Está en la posicion auxiliar
000026E4                                   334  
000026E4                                   335  RBA_NO_AUX:
000026E4  B9CB                             336    CMP.L A3,A4  *Se comparan I y E
000026E6  6C00 000E                        337    BGE RBA_MAYOR
000026EA  528C                             338    ADD.L #1,A4
000026EC  1881                             339    MOVE.B  D1,(A4)            *Push del registro D1 en el buffer
000026EE  21CC 2354                        340    MOVE.L  A4,RBA_INT_PUNT    *Guarda la nueva direcion del puntero
000026F2  6000 0026                        341    BRA FIN_ESCCAR
000026F6                                   342  
000026F6                                   343  RBA_MAYOR:
000026F6  18C1                             344    MOVE.B  D1,(A4)+           *Push del registro D1 en el buffer
000026F8  21CC 2354                        345    MOVE.L  A4,RBA_INT_PUNT           *Guarda la nueva direcion del puntero
000026FC  6000 001C                        346    BRA FIN_ESCCAR
00002700                                   347  
00002700                                   348  RBA_AUX:
00002700  B5CB                             349    CMP.L A3,A2  * E=P?
00002702  6700 0010                        350    BEQ   LLENO
00002706  2878 2348                        351    MOVE.L  RBA_IN_PUNT,A4
0000270A  1881                             352    MOVE.B  D1,(A4)   *Push del registro D1 en el buffer
0000270C  21CC 2354                        353    MOVE.L  A4,RBA_INT_PUNT  *Se Inicializa I con el valor de Principio
00002710  6000 0008                        354    BRA FIN_ESCCAR
00002714                                   355  
00002714                                   356  LLENO:
00002714  70FF                             357      MOVE.L #$ffffffff,D0
00002716  6000 0002                        358      BRA FIN_ESCCAR
0000271A                                   359  FIN_ESCCAR:
0000271A  4E5E                             360    UNLK A6
0000271C  4E75                             361    RTS
0000271E                                   362  
0000271E                                   363  ********************LINEA********************
0000271E                                   364  
0000271E                                   365  LINEA:
0000271E  4E56 0000                        366    LINK A6,#0
00002722  0800 0000                        367    BTST #0,D0
00002726  6700 0036                        368    BEQ LINEA_A
0000272A                                   369  
0000272A                                   370  LINEA_B:
0000272A  B07C 0001                        371    CMP #$00000001,D0
0000272E  6700 0018                        372    BEQ LINEAB_REC
00002732                                   373  LINEAB_TRANS:
00002732  2478 2378                        374    MOVE.L TBB_IN_PUNT,A2
00002736  2678 2380                        375    MOVE.L TBB_EXT_PUNT,A3 *Se mete el puntero de Principio al A2
0000273A  2878 2384                        376    MOVE.L TBB_INT_PUNT,A4 *Se mete el puntero I en A4
0000273E  2A78 237C                        377    MOVE.L TBB_FIN_PUNT,A5 *Se mete el puntero FIn en A5
00002742  4280                             378    CLR.L D0 *Contador
00002744  6000 004C                        379    BRA L_BUCLE
00002748                                   380  
00002748                                   381  LINEAB_REC:
00002748  2478 2358                        382    MOVE.L RBB_IN_PUNT,A2
0000274C  2678 2360                        383    MOVE.L RBB_EXT_PUNT,A3 *Se mete el puntero de Principio al A2
00002750  2878 2364                        384    MOVE.L RBB_INT_PUNT,A4 *Se mete el puntero I en A4
00002754  2A78 235C                        385    MOVE.L RBB_FIN_PUNT,A5 *Se mete el puntero FIn en A5
00002758  4280                             386    CLR.L D0 *Contador
0000275A  6000 0036                        387    BRA L_BUCLE
0000275E                                   388  
0000275E                                   389  LINEA_A:
0000275E  B07C 0000                        390    CMP #$00000000,D0
00002762  6700 0018                        391    BEQ LINEAA_REC
00002766                                   392  
00002766                                   393  LINEAA_TRANS:
00002766  2478 2368                        394    MOVE.L TBA_IN_PUNT,A2
0000276A  2678 2370                        395    MOVE.L TBA_EXT_PUNT,A3 *Se mete el puntero de Principio al A2
0000276E  2878 2374                        396    MOVE.L TBA_INT_PUNT,A4 *Se mete el puntero I en A4
00002772  2A78 236C                        397    MOVE.L TBA_FIN_PUNT,A5 *Se mete el puntero FIn en A5
00002776  4280                             398    CLR.L D0 *Contador
00002778  6000 0018                        399    BRA L_BUCLE
0000277C                                   400  
0000277C                                   401  LINEAA_REC:
0000277C  2478 2348                        402    MOVE.L RBA_IN_PUNT,A2
00002780  2678 2350                        403    MOVE.L RBA_EXT_PUNT,A3 *Se mete el puntero de Principio al A2
00002784  2878 2354                        404    MOVE.L RBA_INT_PUNT,A4 *Se mete el puntero I en A4
00002788  2A78 234C                        405    MOVE.L RBA_FIN_PUNT,A5 *Se mete el puntero FIn en A5
0000278C  4280                             406    CLR.L D0 *Contador
0000278E  6000 0002                        407    BRA L_BUCLE
00002792                                   408  
00002792                                   409  L_BUCLE:
00002792  4281                             410     CLR.L D1
00002794  5280                             411     ADD.L #1,D0 *Aumenta el contador
00002796  1213                             412     MOVE.B (A3),D1 *POP de E
00002798  B27C 000D                        413     CMP #13,D1 *D1=13?
0000279C  6700 0036                        414     BEQ F_LINEA  *Si D1=13, SE acaba la linea
000027A0  BACB                             415     CMP A3,A5 *E=F?
000027A2  6700 0012                        416     BEQ FIN_LINEA *Si E=F, esta al final de la linea
000027A6  B6CC                             417     CMP A4,A3 *I=E?
000027A8  6700 0006                        418     BEQ L_VACIO *Si I=E, vacio
000027AC  528B                             419     ADD.L #1,A3
000027AE  60E2                             420     BRA L_BUCLE
000027B0                                   421  L_VACIO:
000027B0  4280                             422    CLR.L D0 *Se pone el contador a 0
000027B2  6000 0020                        423    BRA F_LINEA
000027B6                                   424  FIN_LINEA:
000027B6  121B                             425    MOVE.B (A3)+,D1 *POP del buffer
000027B8  B27C 000D                        426    CMP #13,D1 *D1=13?
000027BC  6700 0016                        427    BEQ F_LINEA *Fin de la linea
000027C0  528D                             428    ADD.L #1,A5
000027C2  BACC                             429    CMP A4,A5
000027C4  538D                             430    SUB.L #1,A5
000027C6  6600 0008                        431    BNE L_RESET
000027CA  4280                             432    CLR.L D0 *D1!=13, no es una linea, por tanto contador=0
000027CC  6000 0006                        433    BRA F_LINEA
000027D0                                   434  L_RESET:
000027D0  264A                             435    MOVE.L A2,A3
000027D2  60BE                             436    BRA L_BUCLE
000027D4                                   437  F_LINEA:
000027D4  4E5E                             438    UNLK A6
000027D6  4E75                             439    RTS
000027D8                                   440  
000027D8                                   441  
000027D8                                   442  
000027D8                                   443  ********************SCAN********************
000027D8                                   444    **recepcion
000027D8                                   445  SCAN:
000027D8  4E56 0000                        446    LINK A6,#0  *Creación marco de pila
000027DC  226E 0008                        447    MOVE.L   8(A6),A1 *DIR Buffer
000027E0  302E 000C                        448    MOVE.W   12(A6),D0 *Descriptor
000027E4  342E 000E                        449    MOVE.W   14(A6),D2 *Tamaño
000027E8  3800                             450    MOVE.W   D0,D4 *Guardamos el Descriptor
000027EA  B07C 0001                        451    CMP #$0001,D0
000027EE  6E00 002A                        452    BGT SCAN_ERROR
000027F2  B07C 0000                        453    CMP #0000,D0
000027F6  6D00 0022                        454    BLT SCAN_ERROR
000027FA  6100 FF22                        455    BSR LINEA
000027FE  2600                             456    MOVE.L D0,D3 *Número de caracteres que hay en la línea
00002800  B642                             457    CMP D2,D3 *Si el número de caracteres que hay en la línea es mayor que el tamaño tiene que devolver un error
00002802  6E00 001C                        458    BGT SCAN_TAMANO
00002806  4282                             459    CLR.L D2  *Se libera el 2 registro de Direccion
00002808                                   460  SCAN_BUCLE: *Leemos los N caracteres de la linea y los almacenamos en el buffer
00002808  B642                             461    CMP D2,D3
0000280A  6700 001A                        462    BEQ SC_FIN
0000280E  5202                             463    ADD.B #1,D2
00002810  3004                             464    MOVE.W D4,D0
00002812  6100 FC8A                        465    BSR LEECAR
00002816  12C0                             466    MOVE.B D0,(A1)+ *Metemos el caracter en el buffer
00002818  60EE                             467    BRA SCAN_BUCLE
0000281A                                   468  SCAN_ERROR:
0000281A  70FF                             469    MOVE.L #$ffffffff,D0
0000281C  6000 000A                        470    BRA SCAN_FIN
00002820                                   471  SCAN_TAMANO:
00002820  7000                             472    MOVE.L #0,D0
00002822  6000 0004                        473    BRA SCAN_FIN
00002826                                   474  SC_FIN:
00002826  2003                             475    MOVE.L D3,D0 *Devolvemos el resultado en D0
00002828                                   476  SCAN_FIN:
00002828  4E5E                             477    UNLK A6
0000282A  4E75                             478    RTS
0000282C                                   479  
0000282C                                   480  
0000282C                                   481  ********************PRINT********************
0000282C                                   482  
0000282C                                   483  **transmision
0000282C                                   484  PRINT:
0000282C  4E56 0000                        485    LINK A6,#0  *Creación marco de pila
00002830  226E 0008                        486    MOVE.L   8(A6),A1 *DIR Buffer
00002834  302E 000C                        487    MOVE.W   12(A6),D0 *Descriptor
00002838  342E 000E                        488    MOVE.W   14(A6),D2 *Tamaño
0000283C  4284                             489    CLR.L D4 *Contador
0000283E  B07C 0001                        490    CMP #$0001,D0
00002842  6700 0018                        491    BEQ PRINT_B
00002846  B07C 0000                        492    CMP #0000,D0
0000284A  6700 0008                        493    BEQ PRINT_A
0000284E                                   494  PRINT_ERROR:
0000284E  70FF                             495    MOVE.L #$ffffffff,D0 *Se retorna -1 en el registro D0
00002850  6000 003C                        496    BRA PRINT_FIN
00002854                                   497  PRINT_A:
00002854  303C 0010                        498    MOVE.W #$0010,D0
00002858  6000 0006                        499    BRA PRINT_BUCLE
0000285C                                   500  PRINT_B:
0000285C  303C 0011                        501    MOVE.W #$0011,D0
00002860                                   502  PRINT_BUCLE:
00002860  B444                             503    CMP D4,D2
00002862  6700 0028                        504    BEQ PR_FIN
00002866  5204                             505    ADD.B #1,D4 *Aumentamos Contador
00002868  1219                             506    MOVE.B (A1)+,D1
0000286A  6100 FD3C                        507    BSR ESCCAR	git push --set-upstream origin feature/print
0000286E                                   508  
0000286E  B27C 000D                        509    CMP #13,D1
00002872  6700 000C                        510    BEQ PRINT_FLAG
00002876  B07C FFFF                        511    CMP #$ffffffff,D0
0000287A  6700 0010                        512    BEQ PR_FIN
0000287E  60E0                             513    BRA PRINT_BUCLE
00002880                                   514  
00002880                                   515  PRINT_FLAG:
00002880  4285                             516    CLR.L D5
00002882  1A3C 0001                        517    MOVE.B #1,D5
00002886  11C5 2388                        518    MOVE.B D5,FLAG_PRINT
0000288A  60D4                             519    BRA PRINT_BUCLE
0000288C                                   520  
0000288C                                   521  PR_FIN:
0000288C  2004                             522    MOVE.L D4,D0 *Devolvemos el resultado en D0
0000288E                                   523  PRINT_FIN:
0000288E  4E5E                             524    UNLK A6 *Se elimina el marco de pila
00002890  4E75                             525    RTS
00002892                                   526  *RTI
00002892                                   527  RTI:
00002892  1438 2388                        528    MOVE.B FLAG_PRINT,D2 *Comprobamos si print ha activado las interrupciones
00002896  4E75                             529    RTS
00002898                                   530  
00002898                                   531  *Programa Principal
00002898                                   532  INICIO:
00002898  6100 FAF2                        533     BSR INIT
0000289C  3F3C 0022                        534     MOVE.W #$0022,-(A7)
000028A0  3F3C 0000                        535     MOVE.W #$0000,-(A7)
000028A4  2F3C 00001388                    536     MOVE.L #$00001388,-(A7)
000028AA  287C 00001388                    537     MOVE.L #$00001388,A4
000028B0  18FC 0069                        538     MOVE.B #$69,(A4)+
000028B4  18FC 000D                        539     MOVE.B #13,(A4)+
000028B8  18FC 0069                        540     MOVE.B #$69,(A4)+
000028BC  18FC 0069                        541     MOVE.B #$69,(A4)+
000028C0  18FC 0069                        542     MOVE.B #$69,(A4)+
000028C4  18FC 0069                        543     MOVE.B #$69,(A4)+
000028C8  18FC 0069                        544     MOVE.B #$69,(A4)+
000028CC  18FC 0069                        545     MOVE.B #$69,(A4)+
000028D0  18FC 0069                        546     MOVE.B #$69,(A4)+
000028D4  6100 FF56                        547     BSR PRINT
000028D8  61B8                             548     BSR RTI
000028DA  4848                             549     BREAK

No errors detected
No warnings generated
