00000000                                     1  * Inicializa el SP y el PC
00000000                                     2          ORG     $0
00000000  00008000                           3          DC.L    $8000           *Pila
00000004  000026E8                           4          DC.L    INICIO          *PC
00000400                                     5          ORG     $400
00000400                                     6  
00000400                                     7  	*Buffers
00000400                                     8  BUS_RBA:DS.B 2002
00000BD2                                     9  BUS_RBB:DS.B 2002
000013A4                                    10  BUS_TBA:DS.B 2002
00001B76                                    11  BUS_TBB:DS.B 2002
00002348                                    12  
00002348                                    13  	*Punteros
00002348  00000000                          14  RBA_IN_PUNT: DC.L 0
0000234C  00000000                          15  RBA_FIN_PUNT:DC.L 0
00002350  00000000                          16  RBA_EXT_PUNT:DC.L 0
00002354  00000000                          17  RBA_INT_PUNT:DC.L 0
00002358  00000000                          18  RBB_IN_PUNT: DC.L 0
0000235C  00000000                          19  RBB_FIN_PUNT:DC.L 0
00002360  00000000                          20  RBB_EXT_PUNT:DC.L 0
00002364  00000000                          21  RBB_INT_PUNT:DC.L 0
00002368  00000000                          22  TBA_IN_PUNT: DC.L 0
0000236C  00000000                          23  TBA_FIN_PUNT:DC.L 0
00002370  00000000                          24  TBA_EXT_PUNT:DC.L 0
00002374  00000000                          25  TBA_INT_PUNT:DC.L 0
00002378  00000000                          26  TBB_IN_PUNT: DC.L 0
0000237C  00000000                          27  TBB_FIN_PUNT:DC.L 0
00002380  00000000                          28  TBB_EXT_PUNT:DC.L 0
00002384  00000000                          29  TBB_INT_PUNT:DC.L 0
00002388                                    30  
00002388                                    31  
00002388                                    32  
00002388                                    33  * Definicion de equivalencias
00002388                                    34  
00002388  =00EFFC01                         35  MR1A    EQU     $effc01       * de modo A (escritura)
00002388  =00EFFC01                         36  MR2A    EQU     $effc01       * de modo A (2 escritura)
00002388  =00EFFC03                         37  SRA     EQU     $effc03       * de estado A (lectura)
00002388  =00EFFC03                         38  CSRA    EQU     $effc03       * de seleccion de reloj A (escritura)
00002388  =00EFFC05                         39  CRA     EQU     $effc05       * de control A (escritura)
00002388  =00EFFC07                         40  TBA     EQU     $effc07       * buffer transmision A (escritura)
00002388  =00EFFC07                         41  RBA     EQU     $effc07       * buffer recepcion A  (lectura)
00002388  =00EFFC17                         42  TBB     EQU     $effc17       * buffer trasmisión B
00002388  =00EFFC17                         43  RBB     EQU     $effc17       * buffer recepción B
00002388  =00EFFC09                         44  ACR     EQU     $effc09       * de control auxiliar
00002388  =00EFFC0B                         45  IMR     EQU     $effc0B       * de mascara de interrupcion A (escritura)
00002388  =00EFFC0B                         46  ISR     EQU     $effc0B       * de estado de interrupcion A (lectura)
00002388                                    47  
00002388                                    48  *INIT
00002388                                    49  INIT:
00002388  21FC 00000400 2348                50  	MOVE.L #BUS_RBA,RBA_IN_PUNT
00002390  21FC 00000400 2350                51  	MOVE.L #BUS_RBA,RBA_EXT_PUNT
00002398  21FC 00000400 2354                52  	MOVE.L #BUS_RBA,RBA_INT_PUNT
000023A0  21FC 00000400 234C                53  	MOVE.L #BUS_RBA,RBA_FIN_PUNT
000023A8  06B8 00001999 234C                54  	ADD.L  #$1999,RBA_FIN_PUNT
000023B0  21FC 00000BD2 2358                55  	MOVE.L #BUS_RBB,RBB_IN_PUNT
000023B8  21FC 00000BD2 2360                56  	MOVE.L #BUS_RBB,RBB_EXT_PUNT
000023C0  21FC 00000BD2 2364                57  	MOVE.L #BUS_RBB,RBB_INT_PUNT
000023C8  21FC 00000BD2 235C                58  	MOVE.L #BUS_RBB,RBB_FIN_PUNT
000023D0  06B8 00001999 235C                59  	ADD.L  #$1999,RBB_FIN_PUNT
000023D8  21FC 000013A4 2368                60  	MOVE.L #BUS_TBA,TBA_IN_PUNT
000023E0  21FC 000013A4 2370                61  	MOVE.L #BUS_TBA,TBA_EXT_PUNT
000023E8  21FC 000013A4 2374                62  	MOVE.L #BUS_TBA,TBA_INT_PUNT
000023F0  21FC 000013A4 236C                63  	MOVE.L #BUS_TBA,TBA_FIN_PUNT
000023F8  06B8 00001999 236C                64  	ADD.L  #$1999,TBA_FIN_PUNT
00002400  21FC 00001B76 2378                65  	MOVE.L #BUS_TBB,TBB_IN_PUNT
00002408  21FC 00001B76 2380                66  	MOVE.L #BUS_TBB,TBB_EXT_PUNT
00002410  21FC 00001B76 2384                67  	MOVE.L #BUS_TBB,TBB_INT_PUNT
00002418  21FC 00001B76 237C                68  	MOVE.L #BUS_TBB,TBB_FIN_PUNT
00002420  06B8 00001999 237C                69  	ADD.L  #$1999,TBB_FIN_PUNT
00002428  4E75                              70  	RTS
0000242A                                    71  
0000242A                                    72    *********************LEECAR**********************
0000242A                                    73  
0000242A                                    74    LEECAR:
0000242A  0800 0000                         75      BTST    #0,D0
0000242E  6700 007E                         76      BEQ LINEA_A
00002432                                    77  
00002432                                    78    LINEA_B:
00002432  B07C 0001                         79       CMP #$00000001,D0
00002436  6700 003C                         80       BEQ REC_B
0000243A                                    81  TRANS_B:
0000243A  2878 2384                         82       MOVE.L TBB_INT_PUNT,A4
0000243E  2678 2380                         83       MOVE.L TBB_EXT_PUNT,A3
00002442  B8CB                              84       CMP  A3,A4
00002444  6700 00E4                         85       BEQ VACIO
00002448  2A78 237C                         86       MOVE.L TBB_FIN_PUNT,A5
0000244C  528D                              87       ADD.L #1,A5
0000244E  BACB                              88       CMP A3,A5
00002450  6700 0010                         89       BEQ TBB_RESET
00002454  2A78 2380                         90       MOVE.L  TBB_EXT_PUNT,A5
00002458  101D                              91       MOVE.B  (A5)+,D0
0000245A  21CD 2380                         92       MOVE.L  A5,TBB_EXT_PUNT
0000245E  6000 00CC                         93       BRA FIN_LEECAR
00002462                                    94    TBB_RESET:
00002462  2A78 2380                         95       MOVE.L  TBB_EXT_PUNT,A5
00002466  200D                              96       MOVE.L  A5,D0
00002468  2A78 2378                         97       MOVE.L  TBB_IN_PUNT,A5
0000246C  21CD 2380                         98       MOVE.L  A5,TBB_EXT_PUNT
00002470  6000 00BA                         99       BRA FIN_LEECAR
00002474                                   100  
00002474                                   101     REC_B:
00002474  2878 2364                        102       MOVE.L RBB_INT_PUNT,A4
00002478  2678 2360                        103       MOVE.L RBB_EXT_PUNT,A3
0000247C  B8CB                             104       CMP  A3,A4
0000247E  6700 00AA                        105       BEQ VACIO
00002482  2A78 235C                        106       MOVE.L RBB_FIN_PUNT,A5
00002486  528D                             107       ADD.L #1,A5
00002488  BACB                             108       CMP A3,A5
0000248A  6700 0010                        109       BEQ RBB_RESET
0000248E  2A78 2360                        110       MOVE.L  RBB_EXT_PUNT,A5
00002492  101D                             111       MOVE.B  (A5)+,D0
00002494  21CD 2360                        112       MOVE.L  A5,RBB_EXT_PUNT
00002498  6000 0092                        113       BRA FIN_LEECAR
0000249C                                   114    RBB_RESET:
0000249C  2A78 2360                        115       MOVE.L  RBB_EXT_PUNT,A5
000024A0  201D                             116       MOVE.L  (A5)+,D0
000024A2  2A78 2358                        117       MOVE.L  RBB_IN_PUNT,A5
000024A6  21CD 2360                        118       MOVE.L  A5,RBB_EXT_PUNT
000024AA  6000 0080                        119       BRA FIN_LEECAR
000024AE                                   120  
000024AE                                   121    LINEA_A:
000024AE  B07C 0000                        122      CMP #$00000000,D0
000024B2  6700 003C                        123      BEQ REC_A
000024B6                                   124  
000024B6                                   125    TRANS_A:
000024B6  2878 2374                        126      MOVE.L TBA_INT_PUNT,A4
000024BA  2678 2370                        127      MOVE.L TBA_EXT_PUNT,A3
000024BE  B8CB                             128      CMP  A3,A4
000024C0  6700 0068                        129      BEQ VACIO
000024C4  2A78 236C                        130      MOVE.L TBA_FIN_PUNT,A5
000024C8  528D                             131      ADD.L #1,A5
000024CA  BACB                             132      CMP A3,A5
000024CC  6700 0010                        133      BEQ TBA_RESET
000024D0  2A78 2370                        134      MOVE.L  TBA_EXT_PUNT,A5
000024D4  101D                             135      MOVE.B  (A5)+,D0
000024D6  21CD 2370                        136      MOVE.L  A5,TBA_EXT_PUNT
000024DA  6000 0050                        137      BRA FIN_LEECAR
000024DE                                   138    TBA_RESET:
000024DE  2A78 2370                        139      MOVE.L  TBA_EXT_PUNT,A5
000024E2  201D                             140      MOVE.L  (A5)+,D0
000024E4  2A78 2368                        141      MOVE.L  TBA_IN_PUNT,A5
000024E8  21CD 2370                        142      MOVE.L  A5,TBA_EXT_PUNT
000024EC  6000 003E                        143      BRA FIN_LEECAR
000024F0                                   144  
000024F0                                   145    REC_A:
000024F0  2878 2354                        146      MOVE.L RBA_INT_PUNT,A4 *Puntero escritura
000024F4  2678 2350                        147      MOVE.L RBA_EXT_PUNT,A3 *Puntero lectura
000024F8  B8CB                             148      CMP  A3,A4 *Si están en la misma posicion el puntero está vacío
000024FA  6700 002E                        149      BEQ VACIO
000024FE  2A78 234C                        150      MOVE.L RBA_FIN_PUNT,A5 *Puntero fin
00002502  528D                             151      ADD.L #1,A5
00002504  BACB                             152      CMP A3,A5
00002506  6700 0010                        153      BEQ RBA_RESET
0000250A  2A78 2350                        154      MOVE.L  RBA_EXT_PUNT,A5
0000250E  101D                             155      MOVE.B  (A5)+,D0
00002510  21CD 2350                        156      MOVE.L  A5,RBA_EXT_PUNT
00002514  6000 0016                        157      BRA FIN_LEECAR
00002518                                   158    RBA_RESET:
00002518  2A78 2350                        159      MOVE.L  RBA_EXT_PUNT,A5
0000251C  201D                             160      MOVE.L  (A5)+,D0
0000251E  2A78 2348                        161      MOVE.L  RBA_IN_PUNT,A5 *Reseteamos el puntero de lectura
00002522  21CD 2350                        162      MOVE.L  A5,RBA_EXT_PUNT
00002526  6000 0004                        163      BRA FIN_LEECAR
0000252A                                   164  
0000252A                                   165  
0000252A                                   166    VACIO:
0000252A  70FF                             167      MOVE.L #$ffffffff,D0
0000252C  4E75                             168    FIN_LEECAR:RTS
0000252E                                   169  
0000252E                                   170  ********************ESCCAR********************
0000252E                                   171  ESCCAR:
0000252E                                   172  
0000252E  0800 0000                        173      BTST #0,D0
00002532  6700 00C2                        174      BEQ ELINEA_A
00002536                                   175  
00002536                                   176  ELINEA_B:
00002536                                   177  
00002536  B07C 0001                        178      CMP #$00000001,D0
0000253A  6700 005E                        179      BEQ EREC_B
0000253E                                   180  
0000253E                                   181  ETRANS_B:
0000253E  2A78 2384                        182      MOVE.L TBB_INT_PUNT,A5 *Se mete el puntero I en A5
00002542  2878 237C                        183      MOVE.L TBB_FIN_PUNT,A4 *Se mete el puntero FIn en A4
00002546  2678 2380                        184      MOVE.L TBB_EXT_PUNT,A3 *Se mete el puntero de E al A3
0000254A  2478 2378                        185      MOVE.L  TBB_IN_PUNT,A2 *Se mete el puntero de Principio al A2
0000254E  528C                             186      ADD.L #1,A4   *Se le añade 1 al puntero de fin
00002550  BBCC                             187      CMP.L A4,A5   *Se comparan los punteros I y F+1
00002552  538C                             188      SUB.L #1,A4   *Se restablece el valor del puntero FIn
00002554  6700 0024                        189      BEQ  TBB_AUX      *Está en la posicion auxiliar
00002558  BBCC                             190      CMPA.L A4,A5  *Se comprueba si F e I estan en la misma posicion
0000255A  6700 0036                        191      BEQ    TBB_I_FIN  *Si I y Fin son iguales salta a la etiqueta de fin
0000255E                                   192  
0000255E                                   193  TBB_I_NO_FIN:
0000255E  538B                             194          SUB.L #1,A3  *Se le resta a E una unidad
00002560  B7CD                             195          CMP.L A5,A3  *Se mira si son iguales I y E-1
00002562  528B                             196          ADD.L #1,A3  *Se restablece el valor de E
00002564  6700 0150                        197          BEQ    LLENO   *Si son iguales esta lleno
00002568                                   198  
00002568                                   199  TBB_CONTINUA:
00002568  528C                             200          ADD.L #1,A4 *Se le añade 1 al puntero de fin
0000256A  BBCC                             201          CMP.L A4,A5 *Se comparan los punteros I y F+1
0000256C  538C                             202          SUB.L #1,A4 *Se restablece el valor del puntero FIn
0000256E  6700 000A                        203          BEQ  TBB_AUX    *Está en la posicion auxiliar
00002572                                   204  
00002572                                   205  TBB_NO_AUX:
00002572  1AC1                             206        MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
00002574  21CD 2384                        207        MOVE.L  A5,TBB_INT_PUNT           *Guarda la nueva direcion del puntero
00002578  4E75                             208        RTS
0000257A                                   209  
0000257A                                   210  TBB_AUX:
0000257A  B5CB                             211          CMP.L A3,A2  *Se comprueba si E y P estan en la misma posicion
0000257C  6700 0138                        212          BEQ   LLENO
00002580  1A81                             213          MOVE.B  D1,(A5)   *Push del registro D1 en el buffer
00002582  21F8 2378 2374                   214          MOVE.L  TBB_IN_PUNT,TBA_INT_PUNT  *Se Inicializa I con el valor de Principio
00002588  4E75                             215          RTS
0000258A                                   216  
0000258A                                   217  TBB_NO_LLENO:
0000258A  1AC1                             218          MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
0000258C  21CD 2384                        219          MOVE.L  A5,TBB_INT_PUNT           *Guarda la nueva direcion del puntero
00002590  4E75                             220          RTS
00002592                                   221  
00002592                                   222  TBB_I_FIN:
00002592  1AC1                             223          MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
00002594  21CD 2384                        224          MOVE.L  A5,TBB_INT_PUNT           *Guarda la nueva direcion del puntero
00002598  4E75                             225          RTS
0000259A                                   226  
0000259A                                   227  
0000259A                                   228  
0000259A                                   229  EREC_B:
0000259A  2A78 2364                        230          MOVE.L RBB_INT_PUNT,A5 *Se mete el puntero I en A5
0000259E  2878 235C                        231          MOVE.L RBB_FIN_PUNT,A4 *Se mete el puntero FIn en A4
000025A2  2678 2360                        232          MOVE.L RBB_EXT_PUNT,A3 *Se mete el puntero de E al A3
000025A6  2478 2358                        233          MOVE.L RBB_IN_PUNT,A2 *Se mete el puntero de Principio al A2
000025AA  528C                             234          ADD.L #1,A4   *Se le añade 1 al puntero de fin
000025AC  BBCC                             235          CMP.L A4,A5   *Se comparan los punteros I y F+1
000025AE  538C                             236          SUB.L #1,A4   *Se restablece el valor del puntero FIn
000025B0  6700 0024                        237          BEQ  RBB_AUX      *Está en la posicion auxiliar
000025B4  BBCC                             238          CMPA.L A4,A5  *Se comprueba si F e I estan en la misma posicion
000025B6  6700 0036                        239          BEQ    RBB_I_FIN  *Si I y Fin son iguales salta a la etiqueta de fin
000025BA                                   240  
000025BA                                   241  RBB_I_NO_FIN:
000025BA  538B                             242          SUB.L #1,A3  *Se le resta a E una unidad
000025BC  B7CD                             243          CMP.L A5,A3  *Se mira si son iguales I y E-1
000025BE  528B                             244          ADD.L #1,A3  *Se restablece el valor de E
000025C0  6700 00F4                        245          BEQ   LLENO   *Si son iguales esta lleno
000025C4                                   246  
000025C4                                   247  RBB_CONTINUA:
000025C4  528C                             248          ADD.L #1,A4 *Se le añade 1 al puntero de fin
000025C6  BBCC                             249          CMP.L A4,A5 *Se comparan los punteros I y F+1
000025C8  538C                             250          SUB.L #1,A4 *Se restablece el valor del puntero FIn
000025CA  6700 000A                        251          BEQ  RBB_AUX    *Está en la posicion auxiliar
000025CE                                   252  
000025CE                                   253  RBB_NO_AUX:
000025CE  1AC1                             254        MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
000025D0  21CD 2364                        255        MOVE.L  A5,RBB_INT_PUNT           *Guarda la nueva direcion del puntero
000025D4  4E75                             256        RTS
000025D6                                   257  
000025D6                                   258  RBB_AUX:
000025D6  B5CB                             259          CMP.L A3,A2  *Se comprueba si E y P estan en la misma posicion
000025D8  6700 00DC                        260          BEQ   LLENO
000025DC  1A81                             261          MOVE.B  D1,(A5)   *Push del registro D1 en el buffer
000025DE  21F8 2358 2374                   262          MOVE.L  RBB_IN_PUNT,TBA_INT_PUNT  *Se Inicializa I con el valor de Principio
000025E4  4E75                             263          RTS
000025E6                                   264  
000025E6                                   265  RBB_NO_LLENO:
000025E6  1AC1                             266          MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
000025E8  21CD 2364                        267          MOVE.L  A5,RBB_INT_PUNT           *Guarda la nueva direcion del puntero
000025EC  4E75                             268          RTS
000025EE                                   269  
000025EE                                   270  RBB_I_FIN:
000025EE  1AC1                             271          MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
000025F0  21CD 2364                        272          MOVE.L  A5,RBB_INT_PUNT           *Guarda la nueva direcion del puntero
000025F4  4E75                             273          RTS
000025F6                                   274  
000025F6                                   275  
000025F6                                   276  
000025F6                                   277  ELINEA_A:
000025F6                                   278  
000025F6  B07C 0000                        279      CMP #$00000000,D0
000025FA  6700 005E                        280  	  BEQ EREC_A
000025FE                                   281  
000025FE                                   282  ETRANS_A:
000025FE  2A78 2374                        283      MOVE.L TBA_INT_PUNT,A5 *Se mete el puntero I en A5
00002602  2878 236C                        284      MOVE.L TBA_FIN_PUNT,A4 *Se mete el puntero FIn en A4
00002606  2678 2370                        285      MOVE.L TBA_EXT_PUNT,A3 *Se mete el puntero de E al A3
0000260A  2478 2368                        286      MOVE.L  TBA_IN_PUNT,A2 *Se mete el puntero de Principio al A2
0000260E  528C                             287      ADD.L #1,A4   *Se le añade 1 al puntero de fin
00002610  BBCC                             288      CMP.L A4,A5   *Se comparan los punteros I y F+1
00002612  538C                             289      SUB.L #1,A4   *Se restablece el valor del puntero FIn
00002614  6700 0024                        290      BEQ  TBA_AUX      *Está en la posicion auxiliar
00002618  BBCC                             291      CMPA.L A4,A5  *Se comprueba si F e I estan en la misma posicion
0000261A  6700 0036                        292      BEQ    TBA_I_FIN  *Si I y Fin son iguales salta a la etiqueta de fin
0000261E                                   293  
0000261E                                   294  TBA_I_NO_FIN:
0000261E  538B                             295      SUB.L #1,A3  *Se le resta a E una unidad
00002620  B7CD                             296      CMP.L A5,A3  *Se mira si son iguales I y E-1
00002622  528B                             297      ADD.L #1,A3  *Se restablece el valor de E
00002624  6700 0090                        298      BEQ   LLENO   *Si son iguales esta lleno
00002628                                   299  
00002628                                   300  TBA_CONTINUA:
00002628  528C                             301      ADD.L #1,A4 *Se le añade 1 al puntero de fin
0000262A  BBCC                             302      CMP.L A4,A5 *Se comparan los punteros I y F+1
0000262C  538C                             303      SUB.L #1,A4 *Se restablece el valor del puntero FIn
0000262E  6700 000A                        304      BEQ  TBA_AUX    *Está en la posicion auxiliar
00002632                                   305  
00002632                                   306  TBA_NO_AUX:
00002632  1AC1                             307    MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
00002634  21CD 2374                        308    MOVE.L  A5,TBA_INT_PUNT           *Guarda la nueva direcion del puntero
00002638  4E75                             309    RTS
0000263A                                   310  
0000263A                                   311  TBA_AUX:
0000263A  B5CB                             312      CMP.L A3,A2  *Se comprueba si E y P estan en la misma posicion
0000263C  6700 0078                        313      BEQ   LLENO
00002640  1A81                             314      MOVE.B  D1,(A5)   *Push del registro D1 en el buffer
00002642  21F8 2368 2374                   315      MOVE.L  TBA_IN_PUNT,TBA_INT_PUNT  *Se Inicializa I con el valor de Principio
00002648  4E75                             316      RTS
0000264A                                   317  
0000264A                                   318  TBA_NO_LLENO:
0000264A  1AC1                             319      MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
0000264C  21CD 2374                        320      MOVE.L  A5,TBA_INT_PUNT           *Guarda la nueva direcion del puntero
00002650  4E75                             321      RTS
00002652                                   322  
00002652                                   323  TBA_I_FIN:
00002652  1AC1                             324      MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
00002654  21CD 2374                        325      MOVE.L  A5,TBA_INT_PUNT           *Guarda la nueva direcion del puntero
00002658  4E75                             326      RTS
0000265A                                   327  
0000265A                                   328  
0000265A                                   329  EREC_A:
0000265A  2A78 2354                        330      MOVE.L RBA_INT_PUNT,A5 *Se mete el puntero I en A5
0000265E  2878 234C                        331      MOVE.L RBA_FIN_PUNT,A4 *Se mete el puntero FIn en A4
00002662  2678 2350                        332      MOVE.L RBA_EXT_PUNT,A3 *Se mete el puntero de E al A3
00002666  2478 2348                        333      MOVE.L RBA_IN_PUNT,A2 *Se mete el puntero de Principio al A2
0000266A  528C                             334      ADD.L #1,A4   *Se le añade 1 al puntero de fin
0000266C  BBCC                             335      CMP.L A4,A5   *Se comparan los punteros I y F+1
0000266E  538C                             336      SUB.L #1,A4   *Se restablece el valor del puntero FIn
00002670  6700 0024                        337      BEQ  RBA_AUX      *Está en la posicion auxiliar
00002674  BBCC                             338      CMPA.L A4,A5  *Se comprueba si F e I estan en la misma posicion
00002676  6700 0036                        339      BEQ    RBA_I_FIN  *Si I y Fin son iguales salta a la etiqueta de fin
0000267A                                   340  
0000267A                                   341  RBA_I_NO_FIN:
0000267A  538B                             342      SUB.L #1,A3  *Se le resta a E una unidad
0000267C  B7CD                             343      CMP.L A5,A3  *Se mira si son iguales I y E-1
0000267E  528B                             344      ADD.L #1,A3  *Se restablece el valor de E
00002680  6700 0034                        345      BEQ  LLENO   *Si son iguales esta lleno
00002684                                   346  
00002684                                   347  RBA_CONTINUA:
00002684  528C                             348      ADD.L #1,A4 *Se le añade 1 al puntero de fin
00002686  BBCC                             349      CMP.L A4,A5 *Se comparan los punteros I y F+1
00002688  538C                             350      SUB.L #1,A4 *Se restablece el valor del puntero FIn
0000268A  6700 000A                        351      BEQ  RBA_AUX    *Está en la posicion auxiliar
0000268E                                   352  
0000268E                                   353  RBA_NO_AUX:
0000268E  1AC1                             354    MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
00002690  21CD 2354                        355    MOVE.L  A5,RBA_INT_PUNT           *Guarda la nueva direcion del puntero
00002694  4E75                             356    RTS
00002696                                   357  
00002696                                   358  RBA_AUX:
00002696  B5CB                             359      CMP.L A3,A2  *Se comprueba si E y P estan en la misma posicion
00002698  6700 001C                        360      BEQ LLENO
0000269C  1A81                             361      MOVE.B  D1,(A5)   *Push del registro D1 en el buffer
0000269E  21F8 2348 2374                   362      MOVE.L  RBA_IN_PUNT,TBA_INT_PUNT  *Se Inicializa I con el valor de Principio
000026A4  4E75                             363      RTS
000026A6                                   364  
000026A6                                   365  RBA_NO_LLENO:
000026A6  1AC1                             366      MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
000026A8  21CD 2354                        367      MOVE.L  A5,RBA_INT_PUNT           *Guarda la nueva direcion del puntero
000026AC  4E75                             368      RTS
000026AE                                   369  
000026AE                                   370  RBA_I_FIN:
000026AE  1AC1                             371      MOVE.B  D1,(A5)+           *Push del registro D1 en el buffer
000026B0  21CD 2354                        372      MOVE.L  A5,RBA_INT_PUNT           *Guarda la nueva direcion del puntero
000026B4  4E75                             373      RTS
000026B6                                   374  
000026B6                                   375  LLENO:
000026B6  70FF                             376      MOVE.L #$ffffffff,D0
000026B8  4E75                             377      RTS
000026BA                                   378  
000026BA                                   379  ********************LINEA********************
000026BA                                   380  
000026BA                                   381  LINEA:
000026BA                                   382  
000026BA  6100 FD6E                        383      BSR LEECAR *Llamada a leecar para leer el caracter
000026BE  B07C FFFF                        384      CMP #$ffffffff,D0 *Se comprueba si el buffer esta vacio
000026C2  6700 0014                        385      BEQ VACIO_LINEA
000026C6  B07C 0013                        386      CMP #$00000013,D0 *Se comprueba si el caracter es ASCII 13
000026CA  6700 0006                        387      BEQ FIN_LINEA
000026CE  5281                             388      ADD.L #1,D1 *Se toma D1 como contador y se le suma 1
000026D0  61E8                             389      BSR LINEA
000026D2                                   390      
000026D2                                   391  FIN_LINEA:
000026D2  5281                             392      ADD.L #1,D1 *Se añade el caracter 13
000026D4  2001                             393      MOVE.L D1,D0 *Se guarda la info del contador en D0
000026D6  4E75                             394      RTS
000026D8                                   395  
000026D8                                   396  VACIO_LINEA:
000026D8  7000                             397      MOVE.L #$00000000,D0 *Se guarda un 0 en D0
000026DA  4E75                             398      RTS
000026DC                                   399  
000026DC                                   400  *PRINT
000026DC  4E75                             401  PRINT:RTS
000026DE                                   402  
000026DE                                   403  *SCAN
000026DE  4E75                             404  SCAN:RTS
000026E0                                   405  *RTI
000026E0  4E75                             406  RTI:RTS
000026E2                                   407  
000026E2                                   408  
000026E2                                   409  *Pruebas
000026E2                                   410  PRUEBA:
000026E2  2878 234C                        411    MOVE.L RBA_FIN_PUNT,A4
000026E6                                   412    *MOVE.L RBB_IN_PUNT,A4
000026E6  4E75                             413    RTS
000026E8                                   414  
000026E8                                   415  *Programa Principal
000026E8                                   416  INICIO:
000026E8  6100 FC9E                        417      BSR INIT
000026EC  7000                             418  	  MOVE.L #$00000000,D0
000026EE  7201                             419      MOVE.L #1,D1
000026F0  6100 FE3C                        420      BSR ESCCAR
000026F4  6100 FD34                        421      BSR LEECAR
000026F8  7001                             422      MOVE.L #$00000001,D0
000026FA  7202                             423      MOVE.L #2,D1
000026FC  6100 FE30                        424      BSR ESCCAR
00002700  6100 FD28                        425      BSR LEECAR
00002704  7011                             426      MOVE.L #$00000011,D0
00002706  7203                             427      MOVE.L #3,D1
00002708  6100 FE24                        428      BSR ESCCAR
0000270C  6100 FD1C                        429      BSR LEECAR
00002710  7010                             430      MOVE.L #$00000010,D0
00002712  7204                             431      MOVE.L #4,D1
00002714  6100 FE18                        432      BSR ESCCAR
00002718  6100 FD10                        433      BSR LEECAR
0000271C  4848                             434      BREAK

No errors detected
No warnings generated
